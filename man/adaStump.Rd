\name{adaStump}
\alias{adaStump}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{ Fit an ada boosting model with decision stumps as base learners
%%  ~~function to do ... ~~
}
\description{
%%  ~~ A concise (1-5 lines) description of what the function does. ~~
}
\usage{
adaStump(formula, data, type, iter)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{formula}{
  formula object describing the model to be fit, as in \emph{ada} function from "ada" package.
  
%%     ~~Describe \code{formula} here~~
}
  \item{data}{
  data.frame object  to train the model. The variables named in formula must be present in this object
  
%%     ~~Describe \code{data} here~~
}
  \item{...}{
  
  Further arguments to be passed to \emph{ada} function from "ada" package
%%     ~~Describe \code{type} here~~
}

}
\details{
This function calls \emph{ada} with a default \code{control} argument set to  \code{rpart.control(maxdepth=1,cp=-1,minsplit=0,xval=0)}

%%  ~~ If necessary, more details than the description above ~~
}
\value{

\item{model }{a data.frame describing the stumps generated by \emph{ada}. The object is normally considerably smaller than the equivalent \emph{ada} object}
\item{type }{Type of execution performed. It is directly inherited from the \emph{adaStump} call}

%%  ~Describe the value returned
%%  If it is a LIST, use
%%  \item{comp1 }{Description of 'comp1'}
%%  \item{comp2 }{Description of 'comp2'}
%% ...
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
%%  ~~who you are~~
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{

#Load Iris
data(iris)

#Create Variable is Iris as numerical
iris$isSetosa <- as.numeric(iris$Species == "setosa")

#Split sample in 70 train - 30 test
train.ind <- sample(nrow(iris), nrow(iris) * 0.7)

#Train model. For obvious reasons, Species variable is not included in the fit
fit <- adaStump(isSetosa ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width, iris[train.ind,], 
                type = "discrete", iter = 10, nu = 0.05, bag.frac = 0.6)
}